#include<stdio.h>
#include<stdlib.h>
int compare_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;//比较两个整型值
}
void test1()
{
	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]), compare_int);//qsort 库函数 排序 升序
	//qsort的第一个参数是首元素地址，第二个参数是元素个数，第三个参数是每个元素的大小，第四个参数是函数指针
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("arr[]=%d\n", arr[i]);
	}
}
int compare_float(const void* e1, const void* e2)
{
	return (int)(*(float*)e1 - *(float*)e2);//比较两个浮点型值
}
void test2()
{
	float f[] = { 10.0,9.0,8.0,7.0,6.0 };
	int sz = sizeof(f) / sizeof(f[0]);
	qsort(f, sz, sizeof(f[0]), compare_int);//qsort 库函数 排序 升序
	int j = 0;
	for (j = 0; j < sz; j++)
	{
		printf("f[]=%f\n", f[j]);
	}
}
//int compare_stu_by_name(const void* e1, const void* e2)
//{
//	return strcmp((struct stu*)e1)→name, (struct stu*)e2)→name);
//}
//void test3()
//{
//	struct stu s[3] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
//	int sz = sizeof(s) / sizeof(s[0]);
//	qsort(s, sz, sizeof(s[0]), compare_stu_by_name);
//}

int main()
{
	test1();
	test2();
	//test3();
	return 0;
}
